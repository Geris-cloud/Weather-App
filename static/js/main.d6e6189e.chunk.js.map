{"version":3,"sources":["App-style.js","img/sky.jpg","img/bgc.jpg","img/rain.jpg","img/lightning.jpg","img/clouds.jpg","img/snow.jpg","App.js","index.js"],"names":["boxShad","bgcColor","Bgc","styled","div","Wrapper","section","params","handleErrors","response","ok","Error","statusText","navigator","console","log","App","today","window","Date","toDateString","bgcImg","React","createRef","wrappAnim","endEffect","useCallback","gsap","fromTo","current","opacity","duration","y","delay","useState","city","setCity","weather","setWeather","error","setError","search","to","fetch","then","json","data","catch","alert","bgc","backgroundImage","startbgc","undefined","main","lightbgc","rainbgc","snowbgc","clearbgc","cldbgc","bgcChange","useEffect","id","style","ref","className","onClick","geolocation","getCurrentPosition","position","coords","latitude","longitude","class","type","placeholder","onChange","e","target","value","onKeyPress","which","name","slice","Math","round","temp","ReactDOM","render","document","getElementById"],"mappings":"8LAEMA,EAAU,iCACVC,EAAW,2BAEJC,EAAMC,IAAOC,IAAV,qMASHC,EAAUF,IAAOG,QAAV,kgFAUJN,EACMC,EAgBIA,EAiCVD,EAEMC,G,OC5EP,MAA0B,gCCA1B,MAA0B,gCCA1B,MAA0B,iCCA1B,MAA0B,sCCA1B,MAA0B,mCCA1B,MAA0B,iC,OCUnCM,EACE,kDADFA,EAEC,mCAGDC,EAAe,SAACC,GACpB,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,GAGL,gBAAiBI,UACnBC,QAAQC,IAAI,MAEZD,QAAQC,IAAI,uCAwKCC,MArKf,WACE,IAAIC,GAAQ,IAAIC,OAAOC,MAAOC,eAExBC,EAASC,IAAMC,YACfC,EAAYF,IAAMC,YAOlBE,EAAYC,uBAAY,WAC5BC,IAAKC,OAAOP,EAAOQ,QAAS,CAAEC,QAAS,GAAK,CAAEA,QAAS,EAAGC,SAAU,IACpEJ,IAAKC,OAAOJ,EAAUK,QAAS,CAAEC,QAAS,EAAGE,EAAG,KAAO,CAAEF,QAAS,EAAGC,SAAU,EAAGC,EAAG,EAAGC,MAAO,MAC9F,CAACZ,EAAQG,IAdC,EAgBWU,mBAAS,IAhBpB,mBAgBNC,EAhBM,KAgBAC,EAhBA,OAiBiBF,qBAjBjB,mBAiBNG,EAjBM,KAiBGC,EAjBH,OAkBaJ,qBAlBb,mBAkBNK,EAlBM,KAkBCC,EAlBD,KAoBPC,EAAS,WAbbd,IAAKe,GAAGrB,EAAOQ,QAAS,CAAEC,QAAS,EAAGC,SAAU,IAehDY,MAAM,GAAD,OAAIpC,EAAJ,cAAqB4B,EAArB,kBAAmC5B,EAAnC,kBACFqC,KAAKpC,GACLoC,MAAK,SAAAnC,GAAQ,OAAIA,EAASoC,UAC1BD,MAAK,SAACE,GACLR,EAAWQ,GACXhC,QAAQC,IAAI+B,GACZV,EAAQ,OAETW,OAAM,SAAAR,GACLzB,QAAQC,IAAIwB,GACZrB,OAAO8B,MAAP,6CACAZ,EAAQ,IACRI,GAAS,OAgCTS,EAAM,CACVC,gBAAgB,OAAD,OAASC,EAAT,MAmDjB,OAhDkB,WAChB,QAAgBC,IAAZf,EACF,OAAQA,EAAQA,QAAQ,GAAGgB,MACzB,IAAK,eACHJ,EAAIC,gBAAJ,cAA6BI,GAC7B,MACF,IAAK,UAGL,IAAK,OACHL,EAAIC,gBAAJ,cAA6BK,EAA7B,KACA,MACF,IAAK,OACHN,EAAIC,gBAAJ,cAA6BM,EAA7B,KACA,MACF,IAAK,QACHP,EAAIC,gBAAJ,cAA6BO,GAC7B,MACF,IAAK,SACHR,EAAIC,gBAAJ,cAA6BQ,EAA7B,KACA,MACF,QACET,EAAIC,gBAAJ,cAA6BC,EAA7B,MAMRQ,GAEAC,qBAAU,gBACQR,IAAZf,OACiBe,IAAff,EAAQwB,KAA8B,IAAVtB,IAC9Bd,IACAY,EAAQwB,QAAKT,EACbZ,GAAS,KAEQ,IAAVD,IACTd,IACAe,GAAS,MAEV,CAACf,EAAWc,EAAOF,IAEtBuB,qBAAU,WACRnC,MAEC,IAGD,cAAEvB,EAAF,CACE4D,MAAOb,EACPc,IAAK1C,EAFP,SAGE,cAAChB,EAAD,UACE,uBAAM0D,IAAKvC,EAAX,UACE,sBAAKwC,UAAU,gBAAf,UACE,wBACEA,UAAU,UACVC,QAzFM,WAChBpD,UAAUqD,YAAYC,oBAAmB,SAACC,GAExCzB,MAAM,GAAD,OAAIpC,EAAJ,gBAAuB6D,EAASC,OAAOC,SAAvC,gBAAuDF,EAASC,OAAOE,UAAvE,kBAA0FhE,EAA1F,kBACFqC,KAAKpC,GACLoC,MAAK,SAAAnC,GAAQ,OAAIA,EAASoC,UAC1BD,MAAK,SAACE,GACLR,EAAWQ,GACXV,EAAQ,OAETW,OAAM,SAAAR,GACLrB,OAAO8B,MAAP,iCACAZ,EAAQ,IACRI,GAAS,UA0EP,SAGE,mBAAGgC,MAAM,4BACX,uBACEC,KAAK,OACLT,UAAU,YACVU,YAAY,aACZC,SAvEG,SAACC,GACdxC,EAAQwC,EAAEC,OAAOC,QAuEPA,MAAO3C,EACP4C,WA/EE,SAACH,GACG,KAAZA,EAAEI,OACJvC,OA+EM,wBACEuB,UAAU,WACVC,QAASxB,EAFX,SAGE,mBAAGuB,UAAU,4BAEHZ,IAAZf,EACA,gCACE,sBAAK2B,UAAU,eAAf,UACE,qBAAKA,UAAU,WAAf,SAA2B3B,EAAQ4C,OACnC,qBAAKjB,UAAU,OAAf,SAAuB/C,EAAMiE,MAAM,QAErC,sBAAKlB,UAAU,kBAAf,UACE,sBAAKA,UAAU,MAAf,UAAsBmB,KAAKC,MAAM/C,EAAQgB,KAAKgC,MAA9C,WACA,qBAAKrB,UAAU,UAAf,SAA0B3B,EAAQA,QAAQ,GAAGgB,aAIjD,sBAAKW,UAAU,eAAf,UACE,qBAAKA,UAAU,WAAf,sDACA,qBAAKA,UAAU,OAAf,SAAuB/C,EAAMiE,MAAM,gBCpLjDI,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d6e6189e.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nconst boxShad = ' 0 10px 5px rgba(0, 0, 0, 0.8)';\nconst bgcColor = 'rgba(255, 255, 255, 0.6)'\n\nexport const Bgc = styled.div`\nmax-width: 1920px;\nmargin: 0 auto;\nbackground-size: cover;\nbackground-position: center;\nbackground-repeat: no-repeat;\nfont-family: 'Roboto Condensed', sans-serif;\n`;\n\nexport const Wrapper = styled.section`\nheight: 100vh;\nbackground-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.4));\npadding: 5vh 5%;\noverflow: hidden;\n\n.input-wrapper {\n  width: 100%;\n  margin-bottom: 10vh;\n  border-radius: 0 0 16px 16px;\n  box-shadow: ${boxShad};\n  background-color: ${bgcColor};\n  overflow: hidden;\n  tranform: translate(0,0);\n\n  .input-bar {\n    width: 75%;\n    padding: 5px;\n    text-align: center;\n    font-size: 30px; \n    transition: 0.4s ease;\n\n    background: none;\n    border: none;\n    outline: none;\n\n    :focus {\n      background-color: ${bgcColor};\n    }\n  }\n  .geo-btn,\n  .srch-btn {\n    width: 10%;\n    padding: 5px 0;\n    font-size: 30px;\n    border: none;\n    border-right: 1px solid #fff;\n    border-radius: 0 0 0 16px;\n    box-shadow: 5px 0 5px rgba(0, 0, 0, 0.6);\n    background: none;\n    z-index: 1;\n    transform: translate(0, 0);\n  }\n  .srch-btn {\n    width: 15%;\n    border-right: none;\n    border-left: 1px solid #fff;\n    border-radius: 0 0 16px 0;\n    box-shadow: -5px 0 5px rgba(0, 0, 0, 0.6);\n  }\n}\n\n.date-wrapper,\n.weather-wrapper{\n  width: 100%;\n  padding: 3vh;\n  margin-bottom: 5vh;\n  border-radius: 25px;\n  font-size: 45px;\n  text-align: center;\n  box-shadow: ${boxShad};\n\n  background-color: ${bgcColor};\n  text-shadow: 0 2px 2px rgb(55, 55, 55);\n  \n  .location {\n    margin-bottom: 3vh;\n  }\n\n  .date {\n    font-size: 30px;\n  }\n\n  .deg {\n    font-size: 65px;\n    margin-bottom: 3vh;\n  }\n}\n\n@media (min-width: 360px){\n  .date-wrapper,\n  .weather-wrapper{\n    font-size: 50px;\n}\n\n@media (min-width: 411px) {\n  .input-wrapper {\n    margin-bottom: 15vh;\n  }\n  .date-wrapper,\n  .weather-wrapper{\n    margin-bottom: 10vh;\n  }\n}\n\n@media (min-height: 660px) and (orientation: portrait) {\n  .input-wrapper {\n    margin-bottom: 15vh;\n    }\n  .date-wrapper,\n  .weather-wrapper{\n    margin-bottom: 10vh;\n    }\n  }\n}\n\n@media (min-width: 768px) and (orientation: portrait) {\n  .input-wrapper {\n    margin-bottom: 20vh;\n  }\n  .date-wrapper,\n  .weather-wrapper{\n    margin-bottom: 10vh;\n  }\n}\n\n@media(min-width: 1020px) {\n  padding: 5vh 10%;\n\n  .input-wrapper {\n    width: 60%;\n    margin: 0 auto 20vh auto;\n\n    .srch-btn,\n    .geo-btn {\n      cursor: pointer;\n      transition: 0.4s ease;\n\n      :hover {\n        transform: translate(5%, 0);\n      }\n    }\n    .geo-btn:hover {\n      transform: translate(-5%, 0);\n    }\n  }\n\n  .date-wrapper,\n  .weather-wrapper{\n    width: 60%;\n    margin: 7vh auto 0;\n  }\n}\n`;","export default __webpack_public_path__ + \"static/media/sky.f8175d23.jpg\";","export default __webpack_public_path__ + \"static/media/bgc.2394d7e9.jpg\";","export default __webpack_public_path__ + \"static/media/rain.d32b3978.jpg\";","export default __webpack_public_path__ + \"static/media/lightning.073fe1ba.jpg\";","export default __webpack_public_path__ + \"static/media/clouds.e73c5378.jpg\";","export default __webpack_public_path__ + \"static/media/snow.fb18a3ec.jpg\";","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Wrapper, Bgc } from './App-style';\nimport { gsap } from 'gsap';\nimport clearbgc from './img/sky.jpg';\nimport startbgc from './img/bgc.jpg';\nimport rainbgc from './img/rain.jpg'\nimport lightbgc from './img/lightning.jpg'\nimport cldbgc from './img/clouds.jpg'\nimport snowbgc from './img/snow.jpg'\n\nconst params = {\n  path: \"https://api.openweathermap.org/data/2.5/weather\",\n  key: \"49ebaa43590359392604012bb8ae7231\",\n};\n\nconst handleErrors = (response) => {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response\n}\n\nif ('geolocation' in navigator) {\n  console.log('ok')\n} else {\n  console.log(\"you don't have geolocation function\")\n};\n\nfunction App() {\n  let today = new window.Date().toDateString();\n\n  const bgcImg = React.createRef();\n  const wrappAnim = React.createRef();\n\n  const startEffect = () => {\n    gsap.to(bgcImg.current, { opacity: 0, duration: 1 })\n    // gsap.to(wrappAnim.current, { opacity: 0, y: 150, duration: 1, delay: 1 })\n  }\n\n  const endEffect = useCallback(() => {\n    gsap.fromTo(bgcImg.current, { opacity: 0 }, { opacity: 1, duration: 1, });\n    gsap.fromTo(wrappAnim.current, { opacity: 0, y: 150 }, { opacity: 1, duration: 1, y: 0, delay: 1 })\n  }, [bgcImg, wrappAnim])\n\n  const [city, setCity] = useState('')\n  const [weather, setWeather] = useState()\n  const [error, setError] = useState()\n\n  const search = () => {\n    startEffect();\n    fetch(`${params.path}?q=${city}&APPID=${params.key}&units=metric`)\n      .then(handleErrors)\n      .then(response => response.json())\n      .then((data) => {\n        setWeather(data)\n        console.log(data)\n        setCity('')\n      })\n      .catch(error => {\n        console.log(error)\n        window.alert(`We can't find this city, please try again`);\n        setCity('')\n        setError(true)\n      })\n  }\n\n  const geoSearch = () => {\n    navigator.geolocation.getCurrentPosition((position) => {\n      // startEffect()\n      fetch(`${params.path}?lat=${position.coords.latitude}&lon=${position.coords.longitude}&APPID=${params.key}&units=metric`)\n        .then(handleErrors)\n        .then(response => response.json())\n        .then((data) => {\n          setWeather(data)\n          setCity('')\n        })\n        .catch(error => {\n          window.alert(`We can't locate your position`);\n          setCity('')\n          setError(true)\n        })\n    })\n  }\n\n  const enter = (e) => {\n    if (e.which === 13) {\n      search()\n    };\n  }\n\n  const change = (e) => {\n    setCity(e.target.value)\n  }\n\n  const bgc = {\n    backgroundImage: `url(${startbgc})`,\n  }\n\n  const bgcChange = () => {\n    if (weather !== undefined) {\n      switch (weather.weather[0].main) {\n        case 'Thunderstorm':\n          bgc.backgroundImage = `url(${lightbgc}`;\n          break;\n        case 'Drizzle':\n          bgc.backgroundImage = `url(${rainbgc})`;\n          break;\n        case 'Rain':\n          bgc.backgroundImage = `url(${rainbgc})`;\n          break;\n        case 'Snow':\n          bgc.backgroundImage = `url(${snowbgc})`;\n          break;\n        case 'Clear':\n          bgc.backgroundImage = `url(${clearbgc}`;\n          break;\n        case 'Clouds':\n          bgc.backgroundImage = `url(${cldbgc})`;\n          break;\n        default:\n          bgc.backgroundImage = `url(${startbgc})`;\n          break;\n      }\n    }\n  }\n\n  bgcChange();\n\n  useEffect(() => {\n    if (weather !== undefined) {\n      if (weather.id !== undefined || error === true) {\n        endEffect();\n        weather.id = undefined;\n        setError(false)\n      }\n    } else if (error === true) {\n      endEffect();\n      setError(false);\n    }\n  }, [endEffect, error, weather]);\n\n  useEffect(() => {\n    endEffect();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    < Bgc\n      style={bgc}\n      ref={bgcImg}>\n      <Wrapper>\n        <main ref={wrappAnim}>\n          <div className=\"input-wrapper\">\n            <button\n              className=\"geo-btn\"\n              onClick={geoSearch}>\n              <i class=\"fas fa-map-marker-alt\"></i></button>\n            <input\n              type=\"text\"\n              className=\"input-bar\"\n              placeholder=\"Search....\"\n              onChange={change}\n              value={city}\n              onKeyPress={enter}\n            />\n            <button\n              className=\"srch-btn\"\n              onClick={search}>\n              <i className=\"fas fa-search\"></i></button>\n          </div>\n          {(weather !== undefined) ? (\n            <div>\n              <div className=\"date-wrapper\">\n                <div className=\"location\">{weather.name}</div>\n                <div className=\"date\">{today.slice(3)}</div>\n              </div>\n              <div className=\"weather-wrapper\">\n                <div className=\"deg\">{Math.round(weather.main.temp)}°C</div>\n                <div className=\"weather\">{weather.weather[0].main}</div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"date-wrapper\">\n              <div className=\"location\">Enter a city to view weather information</div>\n              <div className=\"date\">{today.slice(3)}</div>\n            </div>\n          )}\n        </main>\n      </Wrapper>\n    </Bgc >\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}