{"version":3,"sources":["img/bgc.jpg","App-style.js","App.js","index.js"],"names":["boxShad","Bgc","styled","div","background","Wrapper","section","params","handleErrors","response","ok","Error","statusText","App","today","window","Date","toDateString","useState","city","setCity","weather","setWeather","search","fetch","then","json","data","console","log","catch","error","alert","className","type","placeholder","onChange","c","target","value","onKeyPress","e","which","onClick","undefined","name","slice","Math","round","main","temp","ReactDOM","render","document","getElementById"],"mappings":"oLAAe,MAA0B,gCCGnCA,EAAU,iCAGHC,EAAMC,IAAOC,IAAV,sPACQC,EAQtB,IAKWC,EAAUH,IAAOI,QAAV,62CAQhB,GAEYN,EA6CAA,EAvEC,4B,OCDXO,EACE,kDADFA,EAEC,mCAGDC,EAAe,SAACC,GACpB,IAAKA,EAASC,GACZ,MAAMC,MAAMF,EAASG,YAEvB,OAAOH,GAsEMI,MAnEf,WACE,IAAIC,GAAQ,IAAIC,OAAOC,MAAOC,eADjB,EAGWC,mBAAS,IAHpB,mBAGNC,EAHM,KAGAC,EAHA,OAIiBF,qBAJjB,mBAING,EAJM,KAIGC,EAJH,KAMPC,EAAS,WACbC,MAAM,GAAD,OAAIjB,EAAJ,cAAqBY,EAArB,kBAAmCZ,EAAnC,kBACFkB,KAAKjB,GACLiB,MAAK,SAAAhB,GAAQ,OAAIA,EAASiB,UAC1BD,MAAK,SAACE,GACLL,EAAWK,GACXP,EAAQ,IACRQ,QAAQC,IAAIF,MAEbG,OAAM,SAAAC,GACLH,QAAQC,IAAI,SAAUE,GACtBhB,OAAOiB,MAAP,6CACAZ,EAAQ,QAQd,OACE,cAAEnB,EAAF,UACE,cAACI,EAAD,UACE,iCACE,sBAAK4B,UAAU,gBAAf,UACE,uBACEC,KAAK,OACLD,UAAU,YACVE,YAAY,aACZC,SAAU,SAAAC,GAAC,OAAIjB,EAAQiB,EAAEC,OAAOC,QAChCA,MAAOpB,EACPqB,WAfE,SAACC,GACG,KAAZA,EAAEC,OAAgBnB,OAgBd,wBACEU,UAAU,WACVU,QAASpB,EAFX,SAGE,mBAAGU,UAAU,4BAEJW,GAAXvB,EACA,gCACE,sBAAKY,UAAU,eAAf,UACE,qBAAKA,UAAU,WAAf,SAA2BZ,EAAQwB,OACnC,qBAAKZ,UAAU,OAAf,SAAuBnB,EAAMgC,MAAM,QAErC,sBAAKb,UAAU,kBAAf,UACE,sBAAKA,UAAU,MAAf,UAAsBc,KAAKC,MAAM3B,EAAQ4B,KAAKC,MAA9C,WACA,qBAAKjB,UAAU,UAAf,SAA0BZ,EAAQA,QAAQ,GAAG4B,aAIjD,sBAAKhB,UAAU,eAAf,UACE,qBAAKA,UAAU,WAAf,sDACA,qBAAKA,UAAU,OAAf,SAAuBnB,EAAMgC,MAAM,gBCrEjDK,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac7688ef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/bgc.2394d7e9.jpg\";","import styled from 'styled-components';\nimport background from './img/bgc.jpg';\n\nconst boxShad = ' 0 10px 5px rgba(0, 0, 0, 0.5)';\nconst bgcColor = 'rgba(255, 255, 255, 0.4)'\n\nexport const Bgc = styled.div`\nbackground-image: url(${background});\nbackground-size: cover;\nbackground-position: center;\nbackground-repeat: no-repeat;\n/*transition: 0.4s ease-out;*/ \nfont-size: 20px;\nfont-family: 'Roboto Condensed', sans-serif;\n\n${'' /* .warm {\n  background-image: url(${background};\n} */}\n`;\n\nexport const Wrapper = styled.section`\nmin-height: 100vh;\nbackground-image: linear-gradient(to bottom, rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.4));\npadding: 5vh 10%;\n\n.input-wrapper {\n  width: 60%;\n  margin: 0 auto 20vh auto;\n  ${'' /* border: 2px solid #fff; */}\n  border-radius: 0 0 16px 16px;\n  box-shadow: ${boxShad};\n  background-color: rgba(255, 255, 255, 0.4);\n\n  .input-bar {\n    width: 80%;\n    padding: 5px;\n    border-radius: 0 0 16px 16px;\n    text-align: center;\n    font-size: 2rem; \n    transition: 0.4s ease;\n\n    background: none;\n    border: none;\n    outline: none;\n\n    :focus {\n      background-color: rgba(255, 255, 255, 0.3);\n    }\n  }\n  .srch-btn {\n    width: 20%;\n    padding: 5px 0;\n    font-size: 2rem;\n    cursor: pointer;\n    border: none;\n    border-left: 1px solid #fff;\n    border-radius: 0 0 16px 0;\n    box-shadow: -5px 0 5px rgba(0, 0, 0, 0.5);\n    background: none;\n    transition: 0.4s ease;\n\n    :hover {\n      transform: translate(5%, 0);\n    }\n  }\n}\n\n.date-wrapper,\n.weather-wrapper{\n  width: 60%;\n  padding: 3vh;\n  margin: 7vh auto 0;\n  border-radius: 25px;\n  font-size: 3rem;\n  text-align: center;\n  box-shadow: ${boxShad};\n\n  background-color: ${bgcColor};\n  text-shadow: 0 3px 3px rgb(200, 200, 200);\n  \n  .location {\n    margin-bottom: 3vh;\n  }\n\n  .date {\n    font-size: 2rem;\n  }\n\n  .deg {\n    font-size: 4rem;\n    margin-bottom: 3vh;\n  }\n}\n`;","import React, { useEffect, useState } from \"react\";\nimport { Wrapper, Bgc } from './App-style';\n\nconst params = {\n  path: \"https://api.openweathermap.org/data/2.5/weather\",\n  key: \"756de7619febabc7dc64042e98afc037\",\n};\n\nconst handleErrors = (response) => {\n  if (!response.ok) {\n    throw Error(response.statusText);\n  }\n  return response\n}\n\nfunction App() {\n  let today = new window.Date().toDateString();\n\n  const [city, setCity] = useState('')\n  const [weather, setWeather] = useState()\n\n  const search = () => {\n    fetch(`${params.path}?q=${city}&APPID=${params.key}&units=metric`)\n      .then(handleErrors)\n      .then(response => response.json())\n      .then((data) => {\n        setWeather(data)\n        setCity('')\n        console.log(data)\n      })\n      .catch(error => {\n        console.log('Error:', error)\n        window.alert(`We can't find this city, please try again`);\n        setCity('')\n      })\n  }\n\n  const enter = (e) => {\n    if (e.which === 13) { search() };\n  }\n\n  return (\n    < Bgc >\n      <Wrapper>\n        <main>\n          <div className=\"input-wrapper\">\n            <input\n              type=\"text\"\n              className=\"input-bar\"\n              placeholder=\"Search....\"\n              onChange={c => setCity(c.target.value)}\n              value={city}\n              onKeyPress={enter}\n            />\n            <button\n              className=\"srch-btn\"\n              onClick={search}>\n              <i className=\"fas fa-search\"></i></button>\n          </div>\n          {(weather != undefined) ? (\n            <div>\n              <div className=\"date-wrapper\">\n                <div className=\"location\">{weather.name}</div>\n                <div className=\"date\">{today.slice(3)}</div>\n              </div>\n              <div className=\"weather-wrapper\">\n                <div className=\"deg\">{Math.round(weather.main.temp)}Â°C</div>\n                <div className=\"weather\">{weather.weather[0].main}</div>\n              </div>\n            </div>\n          ) : (\n            <div className=\"date-wrapper\">\n              <div className=\"location\">Enter a city to view weather information</div>\n              <div className=\"date\">{today.slice(3)}</div>\n            </div>\n          )}\n        </main>\n      </Wrapper>\n    </Bgc >\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}